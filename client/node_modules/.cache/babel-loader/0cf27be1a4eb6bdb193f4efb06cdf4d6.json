{"ast":null,"code":"import _defineProperty from \"/Users/marcel/Desktop/school/realtime-web/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport createAction from '../services/createActions';\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES';\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED';\nconst initialState = {\n  data: {},\n  loading: {\n    get: false\n  },\n  error: null\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_PROJECTS:\n      return _objectSpread({}, state, {\n        loading: _objectSpread({}, state.loading),\n        error: null\n      });\n\n    case GET_PROJECTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: _objectSpread({}, state.loading),\n        error: null\n      });\n\n    case GET_PROJECTS_FAILED:\n      return _objectSpread({}, state, {\n        loading: _objectSpread({}, state.loading),\n        error: null\n      });\n\n    default:\n      return state;\n  }\n});\nexport const fetchProjectsSuccess = createAction(GET_PROJECTS_SUCCESS);\nexport const fetchProjectsFailed = createAction(GET_PROJECTS_FAILED);\nexport function fetchProjects() {\n  return dispatch => axios.get('http://localhost:9000/projects').then(res => dispatch(fetchProjectsSuccess(res.data)));\n} // export const fetchProjects = () {\n//     dispatch({ type: GET_PROJECTS });\n//     axios.get('http://localhost:9000/projects')\n//     .then((res) => {\n//       console.log(\"WOLLA\", res.data)\n//         dispatch(fetchProjectsSuccess({ data: res.data }));\n//         resolve(res.data)\n//     })\n//     .catch((error) => {\n//         dispatch(fetchProjectsFailed(error));\n//     })\n//   })","map":{"version":3,"sources":["/Users/marcel/Desktop/school/realtime-web/client/src/ducks/projects.js"],"names":["axios","createAction","GET_PROJECTS","GET_PROJECTS_SUCCESS","GET_PROJECTS_FAILED","initialState","data","loading","get","error","state","type","payload","fetchProjectsSuccess","fetchProjectsFailed","fetchProjects","dispatch","then","res"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,oBAAoB,GAAG,8BAA7B;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE,GAFQ;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,gBAAe,CAACC,KAAK,GAAGL,YAAT,EAAuB;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAvB,KAA6C;AACxD,UAAQD,IAAR;AACI,SAAKT,YAAL;AACI,+BACKQ,KADL;AAEEH,QAAAA,OAAO,oBACFG,KAAK,CAACH,OADJ,CAFT;AAKEE,QAAAA,KAAK,EAAE;AALT;;AAOJ,SAAKN,oBAAL;AACI,+BACOO,KADP;AAEIH,QAAAA,OAAO,oBACAG,KAAK,CAACH,OADN,CAFX;AAKIE,QAAAA,KAAK,EAAE;AALX;;AAOJ,SAAKL,mBAAL;AACI,+BACWM,KADX;AAEIH,QAAAA,OAAO,oBACAG,KAAK,CAACH,OADN,CAFX;AAKIE,QAAAA,KAAK,EAAE;AALX;;AAON;AACE,aAAOC,KAAP;AA1BJ;AA4BD,CA7BH;AA+BA,OAAO,MAAMG,oBAAoB,GAAGZ,YAAY,CAACE,oBAAD,CAAzC;AACP,OAAO,MAAMW,mBAAmB,GAAGb,YAAY,CAACG,mBAAD,CAAxC;AAEP,OAAO,SAASW,aAAT,GAA0B;AAC/B,SAAOC,QAAQ,IAAIhB,KAAK,CAACQ,GAAN,CAAU,gCAAV,EAChBS,IADgB,CACXC,GAAG,IAAIF,QAAQ,CAACH,oBAAoB,CAACK,GAAG,CAACZ,IAAL,CAArB,CADJ,CAAnB;AAED,C,CAID;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios'\n\nimport createAction from '../services/createActions';\n\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES'\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED'\n\n\nconst initialState = {\n    data: {},\n    loading: {\n      get: false,\n    },\n    error: null,\n  };\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case GET_PROJECTS:\n            return {\n              ...state,\n              loading: {\n                ...state.loading,\n              },\n              error: null,\n            };\n        case GET_PROJECTS_SUCCESS:\n            return {\n                ...state,\n                loading: {\n                    ...state.loading,\n                },\n                error: null,\n            };\n        case GET_PROJECTS_FAILED:\n            return {\n                    ...state,\n                loading: {\n                    ...state.loading,\n                },\n                error: null,\n            };\n      default:\n        return state;\n    }\n  };  \n\nexport const fetchProjectsSuccess = createAction(GET_PROJECTS_SUCCESS)\nexport const fetchProjectsFailed = createAction(GET_PROJECTS_FAILED)\n\nexport function fetchProjects () {\n  return dispatch => axios.get('http://localhost:9000/projects')\n    .then(res => dispatch(fetchProjectsSuccess(res.data)))\n}\n\n\n\n// export const fetchProjects = () {\n//     dispatch({ type: GET_PROJECTS });\n\n//     axios.get('http://localhost:9000/projects')\n//     .then((res) => {\n//       console.log(\"WOLLA\", res.data)\n//         dispatch(fetchProjectsSuccess({ data: res.data }));\n//         resolve(res.data)\n//     })\n//     .catch((error) => {\n//         dispatch(fetchProjectsFailed(error));\n//     })\n//   })\n\n"]},"metadata":{},"sourceType":"module"}