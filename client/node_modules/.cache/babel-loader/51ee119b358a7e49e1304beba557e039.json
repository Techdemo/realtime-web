{"ast":null,"code":"import _defineProperty from \"/Users/marcel/Desktop/school/realtime-web/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport createAction from '../services/createActions';\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES';\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED';\nexport const requestProjects = () => ({\n  type: GET_PROJECTS\n});\nexport const receiveProjects = projects => ({\n  type: GET_PROJECTS_SUCCESS,\n  projects\n});\nexport const receiveProjectsFail = error => ({\n  type: GET_PROJECTS_FAILED,\n  error\n});\nexport const fetchProjects = () => dispatch => {\n  dispatch(requestProjects());\n  return axios.get('http://localhost:9000/projects').then(res => {\n    dispatch(receiveProjects(res.data));\n  }).catch(error => {\n    dispatch(receiveProjectsFail(error));\n  });\n};\nconst initialState = {\n  data: {},\n  loading: {\n    get: false\n  },\n  error: null\n};\nexport default ((state = initialState, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case GET_PROJECTS:\n      return _objectSpread({}, state, {\n        loading: _objectSpread({}, state.loading),\n        error: null\n      });\n\n    case GET_PROJECTS_SUCCESS:\n      return _objectSpread({}, state, {\n        loading: _objectSpread({}, state.loading),\n        error: null\n      });\n\n    case GET_PROJECTS_FAILED:\n      return _objectSpread({}, state, {\n        loading: _objectSpread({}, state.loading),\n        error: null\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/marcel/Desktop/school/realtime-web/client/src/ducks/projects.js"],"names":["axios","createAction","GET_PROJECTS","GET_PROJECTS_SUCCESS","GET_PROJECTS_FAILED","requestProjects","type","receiveProjects","projects","receiveProjectsFail","error","fetchProjects","dispatch","get","then","res","data","catch","initialState","loading","state","payload"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,oBAAoB,GAAG,8BAA7B;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEJ;AAAR,CAAP,CAAxB;AACP,OAAO,MAAMK,eAAe,GAAGC,QAAQ,KAAK;AAAEF,EAAAA,IAAI,EAAEH,oBAAR;AAA8BK,EAAAA;AAA9B,CAAL,CAAhC;AACP,OAAO,MAAMC,mBAAmB,GAAGC,KAAK,KAAK;AAAEJ,EAAAA,IAAI,EAAEF,mBAAR;AAA6BM,EAAAA;AAA7B,CAAL,CAAjC;AAGP,OAAO,MAAMC,aAAa,GAAG,MAAMC,QAAQ,IAAK;AAC9CA,EAAAA,QAAQ,CAACP,eAAe,EAAhB,CAAR;AAEA,SAAOL,KAAK,CAACa,GAAN,CAAU,gCAAV,EACJC,IADI,CACEC,GAAD,IAAS;AACbH,IAAAA,QAAQ,CAACL,eAAe,CAAEQ,GAAG,CAACC,IAAN,CAAhB,CAAR;AACD,GAHI,EAIJC,KAJI,CAIGP,KAAD,IAAW;AAChBE,IAAAA,QAAQ,CAACH,mBAAmB,CAACC,KAAD,CAApB,CAAR;AACD,GANI,CAAP;AAOD,CAVM;AA2BP,MAAMQ,YAAY,GAAG;AACjBF,EAAAA,IAAI,EAAE,EADW;AAEjBG,EAAAA,OAAO,EAAE;AACPN,IAAAA,GAAG,EAAE;AADE,GAFQ;AAKjBH,EAAAA,KAAK,EAAE;AALU,CAArB;AASA,gBAAe,CAACU,KAAK,GAAGF,YAAT,EAAuB;AAAEZ,EAAAA,IAAF;AAAQe,EAAAA;AAAR,CAAvB,KAA6C;AACxD,UAAQf,IAAR;AACI,SAAKJ,YAAL;AACI,+BACKkB,KADL;AAEED,QAAAA,OAAO,oBACFC,KAAK,CAACD,OADJ,CAFT;AAKET,QAAAA,KAAK,EAAE;AALT;;AAOJ,SAAKP,oBAAL;AACI,+BACOiB,KADP;AAEID,QAAAA,OAAO,oBACAC,KAAK,CAACD,OADN,CAFX;AAKIT,QAAAA,KAAK,EAAE;AALX;;AAOJ,SAAKN,mBAAL;AACI,+BACWgB,KADX;AAEID,QAAAA,OAAO,oBACAC,KAAK,CAACD,OADN,CAFX;AAKIT,QAAAA,KAAK,EAAE;AALX;;AAON;AACE,aAAOU,KAAP;AA1BJ;AA4BD,CA7BH","sourcesContent":["import axios from 'axios'\n\nimport createAction from '../services/createActions';\n\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES'\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED'\n\nexport const requestProjects = () => ({ type: GET_PROJECTS });\nexport const receiveProjects = projects => ({ type: GET_PROJECTS_SUCCESS, projects });\nexport const receiveProjectsFail = error => ({ type: GET_PROJECTS_FAILED, error });\n\n\nexport const fetchProjects = () => dispatch =>  {\n  dispatch(requestProjects());\n\n  return axios.get('http://localhost:9000/projects')\n    .then((res) => {\n      dispatch(receiveProjects((res.data)));\n    })\n    .catch((error) => {\n      dispatch(receiveProjectsFail(error));\n    });\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst initialState = {\n    data: {},\n    loading: {\n      get: false,\n    },\n    error: null,\n  };\n\n\nexport default (state = initialState, { type, payload }) => {\n    switch (type) {\n        case GET_PROJECTS:\n            return {\n              ...state,\n              loading: {\n                ...state.loading,\n              },\n              error: null,\n            };\n        case GET_PROJECTS_SUCCESS:\n            return {\n                ...state,\n                loading: {\n                    ...state.loading,\n                },\n                error: null,\n            };\n        case GET_PROJECTS_FAILED:\n            return {\n                    ...state,\n                loading: {\n                    ...state.loading,\n                },\n                error: null,\n            };\n      default:\n        return state;\n    }\n  };  \n\n"]},"metadata":{},"sourceType":"module"}