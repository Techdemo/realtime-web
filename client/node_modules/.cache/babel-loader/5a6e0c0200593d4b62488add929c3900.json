{"ast":null,"code":"import _defineProperty from \"/Users/marcel/Desktop/school/realtime-web/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport createAction from '../services/createActions';\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES';\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED';\nexport const requestProjects = () => ({\n  type: GET_PROJECTS\n});\nexport const receiveProjects = projects => ({\n  type: GET_PROJECTS_SUCCESS,\n  projects\n});\nexport const receiveProjectsFail = error => ({\n  type: GET_PROJECTS_FAILED,\n  error\n});\nexport const fetchProjects = resolve => dispatch => {\n  dispatch(requestProjects());\n  return fetch('http://localhost:9000/projects').then(res => {\n    const projects = res.data;\n    dispatch(receiveProjects(projects));\n    resolve(res.data);\n  }).catch(error => {\n    dispatch(receiveProjectsFail(error));\n  });\n};\nconst initialState = {\n  projects: [],\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_PROJECTS:\n      return _objectSpread({}, state, {\n        loading: true,\n        error: null\n      });\n\n    case GET_PROJECTS_SUCCESS:\n      return _objectSpread({}, state, {\n        projects: action.projects,\n        error: null\n      });\n\n    case GET_PROJECTS_FAILED:\n      return _objectSpread({}, state, {\n        error: action.error,\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/marcel/Desktop/school/realtime-web/client/src/ducks/projects.js"],"names":["axios","createAction","GET_PROJECTS","GET_PROJECTS_SUCCESS","GET_PROJECTS_FAILED","requestProjects","type","receiveProjects","projects","receiveProjectsFail","error","fetchProjects","resolve","dispatch","fetch","then","res","data","catch","initialState","loading","state","action"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,oBAAoB,GAAG,8BAA7B;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AAEA,OAAO,MAAMC,eAAe,GAAG,OAAO;AAAEC,EAAAA,IAAI,EAAEJ;AAAR,CAAP,CAAxB;AACP,OAAO,MAAMK,eAAe,GAAGC,QAAQ,KAAK;AAAEF,EAAAA,IAAI,EAAEH,oBAAR;AAA8BK,EAAAA;AAA9B,CAAL,CAAhC;AACP,OAAO,MAAMC,mBAAmB,GAAGC,KAAK,KAAK;AAAEJ,EAAAA,IAAI,EAAEF,mBAAR;AAA6BM,EAAAA;AAA7B,CAAL,CAAjC;AAEP,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAaC,QAAQ,IAAK;AACrDA,EAAAA,QAAQ,CAACR,eAAe,EAAhB,CAAR;AAEA,SAAOS,KAAK,CAAC,gCAAD,CAAL,CACJC,IADI,CACEC,GAAD,IAAS;AACb,UAAMR,QAAQ,GAAGQ,GAAG,CAACC,IAArB;AACAJ,IAAAA,QAAQ,CAACN,eAAe,CAAEC,QAAF,CAAhB,CAAR;AACAI,IAAAA,OAAO,CAACI,GAAG,CAACC,IAAL,CAAP;AACD,GALI,EAMJC,KANI,CAMGR,KAAD,IAAW;AAChBG,IAAAA,QAAQ,CAACJ,mBAAmB,CAACC,KAAD,CAApB,CAAR;AACD,GARI,CAAP;AASD,CAZM;AAcP,MAAMS,YAAY,GAAG;AACjBX,EAAAA,QAAQ,EAAE,EADO;AAEjBY,EAAAA,OAAO,EAAE,KAFQ;AAGjBV,EAAAA,KAAK,EAAE;AAHU,CAArB;AAOA,gBAAe,CAACW,KAAK,GAAGF,YAAT,EAAuBG,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAAChB,IAAf;AACI,SAAKJ,YAAL;AACI,+BACKmB,KADL;AAEED,QAAAA,OAAO,EAAE,IAFX;AAGEV,QAAAA,KAAK,EAAE;AAHT;;AAKJ,SAAKP,oBAAL;AACI,+BACOkB,KADP;AAEIb,QAAAA,QAAQ,EAAEc,MAAM,CAACd,QAFrB;AAGIE,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKN,mBAAL;AACI,+BACOiB,KADP;AAEIX,QAAAA,KAAK,EAAEY,MAAM,CAACZ,KAFlB;AAGIU,QAAAA,OAAO,EAAE;AAHb;;AAKN;AACE,aAAOC,KAAP;AApBJ;AAsBD,CAvBH","sourcesContent":["import axios from 'axios'\n\nimport createAction from '../services/createActions';\n\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES'\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED'\n\nexport const requestProjects = () => ({ type: GET_PROJECTS });\nexport const receiveProjects = projects => ({ type: GET_PROJECTS_SUCCESS, projects });\nexport const receiveProjectsFail = error => ({ type: GET_PROJECTS_FAILED, error });\n\nexport const fetchProjects = (resolve) => dispatch =>  {\n  dispatch(requestProjects());\n\n  return fetch('http://localhost:9000/projects')\n    .then((res) => {\n      const projects = res.data\n      dispatch(receiveProjects((projects)));\n      resolve(res.data);\n    })\n    .catch((error) => {\n      dispatch(receiveProjectsFail(error));\n    });\n};\n\nconst initialState = {\n    projects: [],\n    loading: false,\n    error: null,\n  };\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PROJECTS:\n            return {\n              ...state,\n              loading: true,\n              error: null,\n            };\n        case GET_PROJECTS_SUCCESS:\n            return {\n                ...state,\n                projects: action.projects,\n                error: null,\n            };\n        case GET_PROJECTS_FAILED:\n            return {\n                ...state,\n                error: action.error,\n                loading: true,\n            };\n      default:\n        return state;\n    }\n  };  \n\n"]},"metadata":{},"sourceType":"module"}