{"ast":null,"code":"import axios from 'axios';\nimport createAction from '../services/createActions';\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES';\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED';\nconst initialState = {\n  data: {},\n  loading: {\n    get: false\n  },\n  error: null\n}; // export default (state = initialState, { type, payload }) => {\n//     switch (type) {\n//         case GET_PROJECTS:\n//             return {\n//               ...state,\n//               loading: {\n//                 ...state.loading,\n//               },\n//               error: null,\n//             };\n//         case GET_PROJECTS_SUCCESS:\n//             return {\n//                 ...state,\n//                 loading: {\n//                     ...state.loading,\n//                 },\n//                 error: null,\n//             };\n//         case GET_PROJECTS_FAILED:\n//             return {\n//                     ...state,\n//                 loading: {\n//                     ...state.loading,\n//                 },\n//                 error: null,\n//             };\n//       default:\n//         return state;\n//     }\n//   };  \n\nexport const fetchProjectsSuccess = createAction(GET_PROJECTS_SUCCESS);\nexport const fetchProjectsFailed = createAction(GET_PROJECTS_FAILED);\nexport const fetchProjects = () => dispatch => new Promise(resolve => {\n  dispatch({\n    type: GET_PROJECTS\n  });\n  axios.get('http://localhost:9000/projects').then(res => {\n    dispatch(fetchProjectsSuccess({\n      data: {\n        data: res.chats\n      }\n    }));\n    resolve(res.data);\n  }).catch(error => {\n    dispatch(fetchProjectsFailed(error));\n  });\n});","map":{"version":3,"sources":["/Users/marcel/Desktop/school/realtime-web/client/src/ducks/projects.js"],"names":["axios","createAction","GET_PROJECTS","GET_PROJECTS_SUCCESS","GET_PROJECTS_FAILED","initialState","data","loading","get","error","fetchProjectsSuccess","fetchProjectsFailed","fetchProjects","dispatch","Promise","resolve","type","then","res","chats","catch"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,oBAAoB,GAAG,8BAA7B;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE,GAFQ;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB,C,CASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,oBAAoB,GAAGT,YAAY,CAACE,oBAAD,CAAzC;AACP,OAAO,MAAMQ,mBAAmB,GAAGV,YAAY,CAACG,mBAAD,CAAxC;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAc,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACxEF,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEd;AAAR,GAAD,CAAR;AAEAF,EAAAA,KAAK,CAACQ,GAAN,CAAU,gCAAV,EACGS,IADH,CACSC,GAAD,IAAS;AACbL,IAAAA,QAAQ,CAACH,oBAAoB,CAAC;AAAEJ,MAAAA,IAAI,EAAE;AAAEA,QAAAA,IAAI,EAAEY,GAAG,CAACC;AAAZ;AAAR,KAAD,CAArB,CAAR;AACAJ,IAAAA,OAAO,CAACG,GAAG,CAACZ,IAAL,CAAP;AACD,GAJH,EAKGc,KALH,CAKUX,KAAD,IAAW;AAChBI,IAAAA,QAAQ,CAACF,mBAAmB,CAACF,KAAD,CAApB,CAAR;AACD,GAPH;AAQD,CAXgD,CAA1C","sourcesContent":["import axios from 'axios'\n\nimport createAction from '../services/createActions';\n\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES'\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED'\n\n\nconst initialState = {\n    data: {},\n    loading: {\n      get: false,\n    },\n    error: null,\n  };\n\n\n// export default (state = initialState, { type, payload }) => {\n//     switch (type) {\n//         case GET_PROJECTS:\n//             return {\n//               ...state,\n//               loading: {\n//                 ...state.loading,\n//               },\n//               error: null,\n//             };\n//         case GET_PROJECTS_SUCCESS:\n//             return {\n//                 ...state,\n//                 loading: {\n//                     ...state.loading,\n//                 },\n//                 error: null,\n//             };\n//         case GET_PROJECTS_FAILED:\n//             return {\n//                     ...state,\n//                 loading: {\n//                     ...state.loading,\n//                 },\n//                 error: null,\n//             };\n//       default:\n//         return state;\n//     }\n//   };  \n\n\nexport const fetchProjectsSuccess = createAction(GET_PROJECTS_SUCCESS)\nexport const fetchProjectsFailed = createAction(GET_PROJECTS_FAILED)\n\nexport const fetchProjects = () => (dispatch) => new Promise((resolve) => {\n  dispatch({ type: GET_PROJECTS });\n\n  axios.get('http://localhost:9000/projects')\n    .then((res) => {\n      dispatch(fetchProjectsSuccess({ data: { data: res.chats } }));\n      resolve(res.data);\n    })\n    .catch((error) => {\n      dispatch(fetchProjectsFailed(error));\n    });\n});\n"]},"metadata":{},"sourceType":"module"}