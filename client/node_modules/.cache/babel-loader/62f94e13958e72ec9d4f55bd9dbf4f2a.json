{"ast":null,"code":"import _defineProperty from \"/Users/marcel/Desktop/school/realtime-web/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/marcel/Desktop/school/realtime-web/client/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchProjects, deleteProject } from './ducks/projects';\nimport './App.css';\nimport ProjectList from './components/ProjectList/ProjectList';\nimport { PostProject } from './services/fetchApi';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      projects: [],\n      projectname: '',\n      description: ''\n    };\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  componentDidMount() {\n    this.props.fetchProjects();\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    const _this$state = this.state,\n          projectname = _this$state.projectname,\n          description = _this$state.description;\n    PostProject(projectname, description).then(response => {\n      const newState = [...this.state.projects, response.data];\n      this.setState(_objectSpread({}, this.state, {\n        projects: newState\n      }));\n    });\n  }\n\n  handleChangeName(event) {\n    this.setState({\n      projectname: event.target.value\n    });\n  }\n\n  handleChangeDescription(event) {\n    this.setState({\n      description: event.target.value\n    });\n  }\n\n  render() {\n    const projects = this.props.projects;\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(ProjectList, {\n      deleteTask: this.handleDeleteProject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Project name:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"projectname\",\n      value: this.state.projectname,\n      onChange: this.handleChangeName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, \"Project description:\", React.createElement(\"input\", {\n      type: \"text\",\n      name: \"description\",\n      value: this.state.description,\n      onChange: this.handleChangeDescription,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => _objectSpread({}, state);\n\nexport default connect(mapStateToProps, {\n  fetchProjects,\n  deleteProject\n})(App);","map":{"version":3,"sources":["/Users/marcel/Desktop/school/realtime-web/client/src/App.js"],"names":["React","connect","fetchProjects","deleteProject","ProjectList","PostProject","App","Component","constructor","state","projects","projectname","description","handleChangeName","bind","handleChangeDescription","handleSubmit","componentDidMount","props","event","preventDefault","then","response","newState","data","setState","target","value","render","handleDeleteProject","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchProjects, deleteProject } from './ducks/projects'\n\nimport './App.css';\nimport ProjectList from './components/ProjectList/ProjectList'\n\nimport { PostProject } from './services/fetchApi'\n\nclass App extends React.Component {\n  constructor(){\n    super()\n\n    this.state = {\n      projects: [],\n      projectname: '',\n      description: '',\n    }\n\n    this.handleChangeName = this.handleChangeName.bind(this);\n    this.handleChangeDescription = this.handleChangeDescription.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  componentDidMount(){\n    this.props.fetchProjects()\n  }\n\n  handleSubmit(event){\n    event.preventDefault();\n    const { projectname, description } = this.state\n\n    PostProject(projectname, description)\n    .then((response) => {\n      const newState = [...this.state.projects, response.data]\n      this.setState({\n        ...this.state,\n        projects: newState\n      })\n    })\n  }\n\n\n\n\n\n  handleChangeName(event) {\n    this.setState({projectname: event.target.value });\n  }\n\n  handleChangeDescription(event) {\n    this.setState({description: event.target.value });\n  }\n\n\n  render() {\n    const { projects } = this.props\n\n    return (\n      <div className=\"App\">\n        <ProjectList\n          deleteTask={this.handleDeleteProject}\n        />\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Project name:\n            <input type=\"text\" name=\"projectname\" value={this.state.projectname} onChange={this.handleChangeName} />\n          </label>\n          <label>\n            Project description:\n            <input type=\"text\" name=\"description\" value={this.state.description} onChange={this.handleChangeDescription}/>\n          </label>\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  ...state\n});\n\nexport default connect(mapStateToProps, { fetchProjects, deleteProject })(App);\n"]},"metadata":{},"sourceType":"module"}