{"ast":null,"code":"import _defineProperty from \"/Users/marcel/Desktop/school/realtime-web/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport * as appReducers from './ducks';\nconst reducers = combineReducers(_objectSpread({}, appReducers));\nexport const store = createStore(reducers, applyMiddleware(thunk));","map":{"version":3,"sources":["/Users/marcel/Desktop/school/realtime-web/client/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","appReducers","reducers","store"],"mappings":";;;;;;AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,OAAO,KAAKC,WAAZ,MAA6B,SAA7B;AAEA,MAAMC,QAAQ,GAAGJ,eAAe,mBACzBG,WADyB,EAAhC;AAIA,OAAO,MAAME,KAAK,GAAGN,WAAW,CAACK,QAAD,EAAWH,eAAe,CAACC,KAAD,CAA1B,CAAzB","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nimport * as appReducers from './ducks';\n\nconst reducers = combineReducers({\n    ...appReducers,\n  });\n\nexport const store = createStore(reducers, applyMiddleware(thunk))\n"]},"metadata":{},"sourceType":"module"}