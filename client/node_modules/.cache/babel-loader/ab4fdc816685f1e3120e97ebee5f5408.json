{"ast":null,"code":"import axios from 'axios';\nimport createAction from '../services/createActions';\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES';\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED';\nconst initialState = {\n  data: {},\n  loading: {\n    get: false\n  },\n  error: null\n};\nexport default function reducer(initialState = {}, action = {}) {\n  switch (action.type) {\n    default:\n      return initialState;\n  }\n}\nexport function fetchProjects() {\n  return {\n    type: GET_PROJECTS\n  }(axios.get('http://localhost:9000/projects').then(response => {\n    console.log(\"RESPONSE\", response.data);\n  }));\n}\nexport const fetchProjectsSuccess = createAction(GET_PROJECTS_SUCCESS);\nexport const fetchProjectsFailed = createAction(GET_PROJECTS_FAILED); // export function fetchProjects () {\n//   return dispatch => axios.get('http://localhost:9000/projects')\n//     .then(res => dispatch(fetchProjectsSuccess(res.data)))\n// }\n// export default (state = initialState, { type, payload }) => {\n//     switch (type) {\n//         case GET_PROJECTS:\n//             return {\n//               ...state,\n//               loading: {\n//                 ...state.loading,\n//               },\n//               error: null,\n//             };\n//         case GET_PROJECTS_SUCCESS:\n//             return {\n//                 ...state,\n//                 loading: {\n//                     ...state.loading,\n//                 },\n//                 error: null,\n//             };\n//         case GET_PROJECTS_FAILED:\n//             return {\n//                     ...state,\n//                 loading: {\n//                     ...state.loading,\n//                 },\n//                 error: null,\n//             };\n//       default:\n//         return state;\n//     }\n//   };","map":{"version":3,"sources":["/Users/marcel/Desktop/school/realtime-web/client/src/ducks/projects.js"],"names":["axios","createAction","GET_PROJECTS","GET_PROJECTS_SUCCESS","GET_PROJECTS_FAILED","initialState","data","loading","get","error","reducer","action","type","fetchProjects","then","response","console","log","fetchProjectsSuccess","fetchProjectsFailed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,oBAAoB,GAAG,8BAA7B;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE,GAFQ;AAKjBC,EAAAA,KAAK,EAAE;AALU,CAArB;AAQA,eAAe,SAASC,OAAT,CAAiBL,YAAY,GAAG,EAAhC,EAAoCM,MAAM,GAAC,EAA3C,EAA8C;AAC3D,UAAOA,MAAM,CAACC,IAAd;AACE;AAAS,aAAOP,YAAP;AADX;AAGD;AAED,OAAO,SAASQ,aAAT,GAAwB;AAC7B,SAAO;AAAED,IAAAA,IAAI,EAAEV;AAAR,IACLF,KAAK,CAACQ,GAAN,CAAU,gCAAV,EACCM,IADD,CACOC,QAAD,IAAc;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,QAAQ,CAACT,IAAjC;AACH,GAHD,CADK,CAAP;AAMD;AAED,OAAO,MAAMY,oBAAoB,GAAGjB,YAAY,CAACE,oBAAD,CAAzC;AACP,OAAO,MAAMgB,mBAAmB,GAAGlB,YAAY,CAACG,mBAAD,CAAxC,C,CAML;AACA;AACA;AACA;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from 'axios'\n\nimport createAction from '../services/createActions';\n\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES'\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED'\n\n\nconst initialState = {\n    data: {},\n    loading: {\n      get: false,\n    },\n    error: null,\n  };\n\nexport default function reducer(initialState = {}, action={}){\n  switch(action.type){\n    default: return initialState;\n  }\n}\n\nexport function fetchProjects(){\n  return { type: GET_PROJECTS }(\n    axios.get('http://localhost:9000/projects')\n    .then((response) => {\n        console.log(\"RESPONSE\", response.data)\n    })\n  )\n}\n\nexport const fetchProjectsSuccess = createAction(GET_PROJECTS_SUCCESS)\nexport const fetchProjectsFailed = createAction(GET_PROJECTS_FAILED)\n  \n\n\n\n\n  // export function fetchProjects () {\n  //   return dispatch => axios.get('http://localhost:9000/projects')\n  //     .then(res => dispatch(fetchProjectsSuccess(res.data)))\n  // }\n  \n// export default (state = initialState, { type, payload }) => {\n//     switch (type) {\n//         case GET_PROJECTS:\n//             return {\n//               ...state,\n//               loading: {\n//                 ...state.loading,\n//               },\n//               error: null,\n//             };\n//         case GET_PROJECTS_SUCCESS:\n//             return {\n//                 ...state,\n//                 loading: {\n//                     ...state.loading,\n//                 },\n//                 error: null,\n//             };\n//         case GET_PROJECTS_FAILED:\n//             return {\n//                     ...state,\n//                 loading: {\n//                     ...state.loading,\n//                 },\n//                 error: null,\n//             };\n//       default:\n//         return state;\n//     }\n//   };  \n"]},"metadata":{},"sourceType":"module"}