{"ast":null,"code":"import _defineProperty from \"/Users/marcel/Desktop/school/realtime-web/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport createAction from '../services/createActions';\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES';\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED';\nconst initialState = {\n  projects: [],\n  loading: false,\n  error: null\n};\nexport default ((state = initialState, action) => {\n  switch (action.type) {\n    case GET_PROJECTS:\n      console.log(\"Wat gebeurd er\");\n      console.log(\"initialstate\", initialState);\n      return _objectSpread({}, state, {\n        loading: true,\n        error: null\n      });\n\n    case GET_PROJECTS_SUCCESS:\n      return _objectSpread({}, state, {\n        projects: action.projects,\n        error: null\n      });\n\n    case GET_PROJECTS_FAILED:\n      return _objectSpread({}, state, {\n        error: action.error,\n        loading: true\n      });\n\n    default:\n      return state;\n  }\n});\nexport const requestProjects = () => ({\n  type: GET_PROJECTS\n});\nexport const receiveProjects = projects => ({\n  type: GET_PROJECTS_SUCCESS,\n  projects\n});\nexport const receiveProjectsFail = error => ({\n  type: GET_PROJECTS_FAILED,\n  error\n});\nexport const fetchProjects = () => dispatch => new Promise(resolve => {\n  dispatch(requestProjects());\n  fetch('http://localhost:9000/projects').then(res => {\n    dispatch(receiveProjects(res.data));\n    console.log(\"after dispatch\", res.data);\n    resolve(res.data);\n  }).catch(error => {\n    dispatch(receiveProjectsFail(error));\n  });\n});","map":{"version":3,"sources":["/Users/marcel/Desktop/school/realtime-web/client/src/ducks/projects.js"],"names":["axios","createAction","GET_PROJECTS","GET_PROJECTS_SUCCESS","GET_PROJECTS_FAILED","initialState","projects","loading","error","state","action","type","console","log","requestProjects","receiveProjects","receiveProjectsFail","fetchProjects","dispatch","Promise","resolve","fetch","then","res","data","catch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,YAAP,MAAyB,2BAAzB;AAEA,MAAMC,YAAY,GAAG,uBAArB;AACA,MAAMC,oBAAoB,GAAG,8BAA7B;AACA,MAAMC,mBAAmB,GAAG,8BAA5B;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,QAAQ,EAAE,EADO;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAOA,gBAAe,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKT,YAAL;AACEU,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BR,YAA3B;AACE,+BACKI,KADL;AAEEF,QAAAA,OAAO,EAAE,IAFX;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAKJ,SAAKL,oBAAL;AACI,+BACOM,KADP;AAEIH,QAAAA,QAAQ,EAAEI,MAAM,CAACJ,QAFrB;AAGIE,QAAAA,KAAK,EAAE;AAHX;;AAKJ,SAAKJ,mBAAL;AACI,+BACOK,KADP;AAEID,QAAAA,KAAK,EAAEE,MAAM,CAACF,KAFlB;AAGID,QAAAA,OAAO,EAAE;AAHb;;AAKN;AACE,aAAOE,KAAP;AAtBJ;AAwBD,CAzBH;AA4BE,OAAO,MAAMK,eAAe,GAAG,OAAO;AAAEH,EAAAA,IAAI,EAAET;AAAR,CAAP,CAAxB;AACP,OAAO,MAAMa,eAAe,GAAGT,QAAQ,KAAK;AAAEK,EAAAA,IAAI,EAAER,oBAAR;AAA8BG,EAAAA;AAA9B,CAAL,CAAhC;AACP,OAAO,MAAMU,mBAAmB,GAAGR,KAAK,KAAK;AAAEG,EAAAA,IAAI,EAAEP,mBAAR;AAA6BI,EAAAA;AAA7B,CAAL,CAAjC;AAEP,OAAO,MAAMS,aAAa,GAAG,MAAMC,QAAQ,IAAI,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AACtEF,EAAAA,QAAQ,CAACJ,eAAe,EAAhB,CAAR;AAEAO,EAAAA,KAAK,CAAC,gCAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAAS;AACbL,IAAAA,QAAQ,CAACH,eAAe,CAAEQ,GAAG,CAACC,IAAN,CAAhB,CAAR;AACAZ,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BU,GAAG,CAACC,IAAlC;AACAJ,IAAAA,OAAO,CAACG,GAAG,CAACC,IAAL,CAAP;AACD,GALD,EAMCC,KAND,CAMQjB,KAAD,IAAW;AAChBU,IAAAA,QAAQ,CAACF,mBAAmB,CAACR,KAAD,CAApB,CAAR;AACD,GARD;AASD,CAZ8C,CAAxC","sourcesContent":["import axios from 'axios'\n\nimport createAction from '../services/createActions';\n\nconst GET_PROJECTS = 'projects/GET_PROJECTS';\nconst GET_PROJECTS_SUCCESS = 'projects/GET_PROJECTS_SUCCES'\nconst GET_PROJECTS_FAILED = 'projects/GET_PROJECTS_FAILED'\n\nconst initialState = {\n    projects: [],\n    loading: false,\n    error: null,\n  };\n\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_PROJECTS:\n          console.log(\"Wat gebeurd er\")\n          console.log(\"initialstate\",initialState )\n            return {\n              ...state,\n              loading: true,\n              error: null,\n            };\n        case GET_PROJECTS_SUCCESS:\n            return {\n                ...state,\n                projects: action.projects,\n                error: null,\n            };\n        case GET_PROJECTS_FAILED:\n            return {\n                ...state,\n                error: action.error,\n                loading: true,\n            };\n      default:\n        return state;\n    }\n  };  \n\n\n  export const requestProjects = () => ({ type: GET_PROJECTS });\n  export const receiveProjects = projects => ({ type: GET_PROJECTS_SUCCESS, projects });\n  export const receiveProjectsFail = error => ({ type: GET_PROJECTS_FAILED, error });\n  \n  export const fetchProjects = () => dispatch => new Promise((resolve) => { \n    dispatch(requestProjects());\n  \n    fetch('http://localhost:9000/projects')\n    .then((res) => {\n      dispatch(receiveProjects((res.data)));\n      console.log(\"after dispatch\", res.data)\n      resolve(res.data);    \n    })\n    .catch((error) => {\n      dispatch(receiveProjectsFail(error));\n    }); \n  })"]},"metadata":{},"sourceType":"module"}